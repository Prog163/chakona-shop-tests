plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.21.0',
    selenideVersion = '6.12.3',
    junitVersion = '5.9.2'

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    aspectjVersion = "1.9.7"
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            'org.aspectj:aspectjweaver:1.9.19',
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.12",
            "org.junit.jupiter:junit-jupiter:$junitVersion")
    testRuntimeOnly(
            'org.slf4j:slf4j-simple:2.0.5',
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = 'UTF-8'
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task authorization_test(type: Test) {
    useJUnitPlatform{
        includeTags "Authorization"
    }
}

task search_test(type: Test) {
    useJUnitPlatform{
        includeTags "Search"
    }
}

task cart_test(type: Test) {
    useJUnitPlatform{
        includeTags "Cart"
    }
}

task subscribe_test(type: Test) {
    useJUnitPlatform{
        includeTags "Subscribe"
    }
}

task menu_test(type: Test) {
    useJUnitPlatform{
        includeTags "Menu-Items"
    }
}